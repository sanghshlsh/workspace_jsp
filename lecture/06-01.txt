filter

filter class
1.생성
2.매핑
3.체이닝
4.체이닝순서
5.기능
	-요청시적용되는기능
	chain.doFilter(request,response);
	-응답시 적용되는 기능
6. 한글인코딩 적용 
===========================================================================================

filter
client			filter chain(filter여러개가능)		server
	-------->filter1---------->filter2------------------>
	FQ1(request1)	FQ2(request1(변형))		FQ3(reqeuset1(변형-변형))

	<--------	<---------	<--------------------	
	FS1(response1)	FS2(response1(변형)		FS3(response1(변형-변형)

적용순서 fq1-fq2-fq3-fs3-fs2-fs1
===========================================================================================


서블릿과 구조가 동일하다.//web.xml에 매핑가능한것도 동일(단,servlet대신 filter로)

ex)한글인코딩을 생각하면 
webfilter 어노테이션이 무엇으로 들어와도 적용되도록
"/*"	로 설정한다
단 어노테이션에 적용할때는 filterchain 적용불가
filter chain을 이용하고자한다면 web.xml에 filter mapping을 해야하는데
chaining순서는 web.xml에 매핑할 때 filter tag가 아닌filter-mapping tag순서를 따른다.
 

===========================================================================================

filter에서 가장중요한것은 doFilter method

chain.doFilter method를 기준으로 
위에 작성된것이 request 시 호출되는 코드
아래에 작성된것이 response 시 호출되는 코드

한글인코딩은 모두 doFilter 위에 있어야 한다.
request.setCharacterEncoding("utf-8");
response.setContentType("text/html;charset=utf-8");
//resopnse.set~은 response호출시 코드에 있어야 할것 같지만 그곳에 있다면
이는 servlet에서 코딩 마지막줄에 작성하는것과 동일한 일이다.
===========================================================================================
Project Test060101
1~5 jsp의 기본태그 6확장태그
NewFile.jsp
1. 주석태그	
NewFile.jsp
	<%-- --%>	
	html<!----> java // /**/ 주석은 페이지 소스에 노출되지만 
	jsp주석은 노출되지 않는다.
------------------------------------------------------------------
2. 지시어태그(directive tag(환경설정태그))
NewFile1.jsp
   -	<%@ %> 3종류

  1-	page directive tag	<%@ page %>
AllError.jsp

	- 고칠경우3가지
	- 로그인관련화면 session설정
	- 예외처리 페이지 설정할 때	errorPage설정
	- 페이지를 에러페이지로 설정하고 싶을 때 isErrorPage 설정
	- import시(단 ctrl space를 통해 진행할시 알아서 작성된다.)

  2-	inclue directive tag	<%@ include %> -현재페이지에 또다른 페이지를 포함 시킬 수 있다.
	Vs include action tag
 	-include directive tag/static include 정적인클루드/주로 footer에 사용
part.jsp/NewFile2.jsp
		<%@ include file="part.jsp" %>
		part.jsp에있는 page directive tag를 제외한 모든내용이 입력된다.
		포함시킬내용을 제외한 모든 내용 html구조를 포함해서 다 제거하고입력한다.

 	-include action tag/dynamic include 동적인클루드/주로 메뉴같은것에 사용
header.jsp/NewFile3.jsp
		<jsp:include page="header.jsp"/>
		모든내용이 그대로 입력되는것이 아닌 새로 servlet이 작성되어 실행된 결과가 입력된다.


  3-	taglib directive tag	<%@ taglib %>
NewFile4.jsp
	core/fmt/functions  - 세가지정도 사용	
	선언
	<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
   	<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
    	<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
	
	호출
	<c:out value="hello"></c:out>
	${"hello"}
	<%="hello"%>
	<%
	out.print("hello");
	%>	모두동일

templates등록방법
window/preferences/web/jsp files/editor/tmplates/jsp with html 5 markup 더블클릭/page directive tag 아래붙여넣기

------------------------------------------------------------------
3. scriptlet태그	<% %>	method/constructor 비슷
NewFile5.jsp
	내장객체는 scriptlet tag 내부에서만 사용가능
	method/constructor 처럼 생각
	-> 내부 scriptlet/ method/ constructor 생성 불가
	method 호출 가능
	변수 선언(지역변수)/대입 가능
	멤벼변수 선언가능
	멤버/지역변수 모두 사용가능하다면 반드시 지역변수만 사용
	scriptlet tag가 나누어져 다른위치에 있어도 이어져 있다.(하나의 jsp 내부에서)
	이를 활용해 scriptlet tag와 html 코드를 동시에 활용하능하다.
	(ex. <% int a = 5; for(int i=0;i<a;i++){%> hello: <%=i%> <br> <%}%>)

------------------------------------------------------------------
4.declaration 태그(선언태그) <%! %>	field 비슷
NewFile7.jsp
	class의 field영역이라고 생각
	field영역에서는 대입이 안되고, method호출이 안되는 것처럼
	declaration tag에서는 대입과 method호출이 불가능하다.
------------------------------------------------------------------
5.Expression 태그	<%= %>
NewFile8.jsp

EL은 Scriptlet Tag에서 선언된 변수를 인식하지 못한다. 
그래서 그 상황에서는 Expression Tag를 사용

EL을 그상황에서 인식시키려면 Scriptlet Tag에서 선언된 변수를 영역객체(ex. pageContext)에 binding해서 사용하면 되지만
이는 너무 길어진다.
------------------------------------------------------------------
6.action tag		<
7.내장객체(request, response, out, application, session, config,
page, pageContext, exception(에러페이지로 설정된 jsp에서만사용가능))
8.영역객체(pageContext(el에서사용), request, session, application)
9.el
10.jstl
