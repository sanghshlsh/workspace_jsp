package com.naver;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

public class Test1 {
	public void me1() {
		File f1 = new File("C:" + File.separator + "Test.jpg");
		File f2 = new File("C:", "Copy_Test.jpg");

		InputStream in = null;
		OutputStream out = null;
		int what = -1;
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				what = in.read();
				if (what == -1) {
					break;
				}
				out.write(what);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}

			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}

	public void me2() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:", "Copy_test.jpg");
		
		InputStream in = null;
		OutputStream out = null;
		byte[] arr = new byte[512];
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				int leng = in.read(arr);
				if (leng == -1) {
					break;
				}
				out.write(arr, 0, leng);
			}
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (out != null) {
					out.close();
				}
				if (in != null) {
					in.close();
				}				
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
	}
	
	public void me11() {
		
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","Copy_Test.jpg");
		InputStream in = null;
		OutputStream out = null;
		int what = -1;
		
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				what = in.read();
				if (what==-1) {
					break;
				}
				out.write(what);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(in!=null)in.close();
				if(out!=null)out.close();
				
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
		
	}
	
	public void me12() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","Copy_test.jpg");
		InputStream in =null;
		OutputStream out = null;
		byte[] arr = new byte[512];
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				int leng = in.read(arr);
				if (leng == -1) {
					break;
				}
				out.write(arr, 0, leng);
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
	}
	
	public void me21() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C","copy_test.jpg");
		
		InputStream in = null;
		OutputStream out = null;
		int what = -1;
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				what = in.read();
				if (what == -1) {
					break;
				}
				out.write(what);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
	}
	
	public void me22() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","copy_test.jpg");
		
		InputStream in = null;
		OutputStream out = null;
		
		byte[] arr = new byte[512];
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			
			while (true) {
				int leng = in.read(arr);
				if (leng == -1) {
					break;
				}
				out.write(arr, 0, leng);
				
				
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if(in!=null)in.close();
				if (out != null) {
					out.close();
				}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}

	public void me31() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","copy_Test.jpg");
		InputStream in = null;
		OutputStream out = null;
		int what = -1;
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				what = in.read();
				if (what == -1) {
					break;
				}
				out.write(what);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}
	
	public void me32() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","copy_test.jpg");
		
		InputStream in = null;
		OutputStream out = null;
		
		byte[] arr = new byte[512];
		int leng = -1;
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				leng = in.read(arr);
				if(leng == -1)break;
				
				out.write(arr, 0, leng);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}

	public void me41() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","Copy_Test.jpg");
		
		InputStream in = null;
		OutputStream out = null;
		
		int what = -1;
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			
			while (true) {
				what=in.read();
				if (what==-1) {
					break;
				}
				out.write(what);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (out != null) {
					out.close();
				}
				if (in != null) {
					in.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}

	public void me42() {
		File f1 = new File("C:","test.jpg");
		File f2 = new File("C:","copy_test.jpg");
		
		InputStream in = null;
		OutputStream out = null;
		
		byte[] arr = new byte[512];
		int leng = -1;
		
		try {
			in = new FileInputStream(f1);
			out = new FileOutputStream(f2);
			while (true) {
				leng = in.read(arr);
				if(leng==-1)break;
				out.write(arr, 0, leng);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (out != null) {
					out.close();
				}
				if (in != null) {
					in.close();
				}
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
	}
}
