package com.google;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.Reader;
import java.io.Writer;

public class Test {
	
	public void me1() {
		//char stream
		//잘사용하지 않는 코드
		File f1 = new File("C:","test112.txt");
		File f2 = new File("C:","copy_test112.txt");
		
		Reader in = null;
		Writer out = null;
//		Reader reader = null;
//		Writer writer = null;
		
		try {
			//스트림생성
			in = new FileReader(f1);
			out = new FileWriter(f2);//boolean파라미터 추가하는것은  추가할것이냐 덮어씌울것이냐
			
			char[] arr = new char[64];
			int leng = -1;
			while (true) {
//				leng = in.read(arr); 이처럼해도 상관없다.
				leng = in.read(arr,0,arr.length);
				if (leng == -1) {
					break;
				}
				out.write(arr, 0, leng);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (in != null) {
					in.close();
				}
				if (out != null) {
					out.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
	}
	
	
	public void me2() {
		//bufferd char stream (node stream        filter stream X)
		
		File f1 = new File("C:","test112.txt");
		File f2 = new File("C:", "copy_test113.txt");
		
		Reader in = null;
		BufferedReader br = null;
		//BufferedReader는 줄바꿈표시가 있기 전까지 한줄씩 읽어온다. - 문자열
		//줄바꿈기호누락
		Writer out = null;
		BufferedWriter bw = null;
		//bufferedreader에 비해 bufferedwriter는 잘 사용한한다. BR은 BW가아닌 printwriter와 더 자주사용한다.
		
		try {
			in = new FileReader(f1);
			br = new BufferedReader(in);
			out = new FileWriter(f2);
			bw = new BufferedWriter(out);
			
			
			String msg = "";
			while (true) {
				msg = br.readLine();
				if (msg == null) {
					break;
				}
				bw.write(msg);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			try {
				if (br != null) {
					br.close();
				}
				if (in != null) {
					in.close();
				}
				if (bw != null) {
					bw.close();
				}
				if (out != null) {
					out.close();
				}
				
			} catch (Exception e2) {
				e2.printStackTrace();
			}
		}
		
	}
}
